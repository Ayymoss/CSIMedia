@using System.Text.Json
@model IndexModel

@{
    var userInputModel = new UserInputModel();
    ViewData["Title"] = "Home Page";
}

<div class="d-flex flex-column p-2">
    <h3>Enter a new set</h3>

    <div class="p-2 mb-4 border border-2 rounded">
        <form asp-controller="Home" asp-action="SubmitNumbers" method="post">
            <div class="mb-3">
                <label class="form-label" asp-for="@userInputModel.RawUserInput"></label>
                <input class="form-control" asp-for="@userInputModel.RawUserInput"/>
            </div>
            <div class="form-check">
                <label class="form-label" asp-for="@userInputModel.Ascending"></label>
                <input class="form-check-input" type="checkbox" asp-for="@userInputModel.Ascending"/>
            </div>
            <div class="d-flex align-items-center">
                <input value="Submit" type="submit" class="btn btn-primary"/>
                @if (!string.IsNullOrEmpty(Model.ValidationResult.Message))
                {
                    <div class="alert alert-@(Model.ValidationResult.Error ? "danger" : "info") p-2 m-2" role="alert">
                        @Model.ValidationResult.Message
                    </div>
                }
            </div>
        </form>
    </div>

    @if (Model.Numbers.Count != 0)
    {
        <h4>Existing Rows</h4>

        <div class="p-2 mt-2 mb-2">
            <table class="table table-bordered table-striped">
                <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Amount</th>
                    <th scope="col">Numbers</th>
                    <th scope="col">Sort</th>
                    <th scope="col">Sort Runtime</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var numberRow in Model.Numbers)
                {
                    <tr>
                        <th scope="row">@numberRow.Id</th>
                        <td>@numberRow.Numbers.Length</td>
                        <td>[@string.Join("], [", numberRow.Numbers.Select(x => x.ToString("N0")))]</td>
                        <td>@(numberRow.Ascending ? "Ascending" : "Descending")</td>
                        <td>@numberRow.TimeTakenToSort.ToString("c")</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <h4>JSON Export</h4>

        <div class="p-2 mt-2">
            <textarea class="form-control" style="height: 600px">@JsonSerializer.Serialize(Model.Numbers, new JsonSerializerOptions {WriteIndented = true})</textarea>
        </div>
    }
</div>
